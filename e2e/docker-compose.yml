version: "3.4"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    logging:
      driver: none
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    links:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: none
  exporter:
    build:
      context: ../
      # Reuse the Dockerfile used for the unit tests, however change the command.
      dockerfile: docker/Dockerfile-test
      args:
        NODE_ENV: development
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_URL: kafka:9092
      ZOOKEEPER_URL: zookeeper:2181
      KAFKA_TOPIC: erc20_exporter_test
    ports:
      # port for checking health.
      - "127.0.0.1:3000:3000"
    entrypoint: "/bin/sh"
    command: ["-c", "docker/wait_for_services.sh && /opt/node_modules/.bin/mocha e2e/producer-transaction.spec.js"]
